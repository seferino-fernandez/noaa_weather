name: Continuous Deployment - Build Binaries

permissions:
    contents: write

# This workflow is triggered after the `release` job in `release.yml` successfully publishes a GitHub Release.
on:
    release:
        types: [published]

env:
    BINARY_NAME: "noaa-weather"

jobs:
    upload-assets:
        name: Build and Upload Assets for ${{ matrix.target }}
        # This job will only run if:
        # 1. The action is running in the original repository, not a fork.
        if: github.repository_owner == 'seferino-fernandez'

        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    # Linux (amd64, arm64)
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                    # macOS (Intel & Apple Silicon)
                    - target: x86_64-apple-darwin
                      os: macos-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest
                    # Windows (amd64, arm64)
                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
                    - target: aarch64-pc-windows-msvc
                      os: windows-latest

        timeout-minutes: 30

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  ref: ${{ github.ref_name }}

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@nightly
              with:
                  targets: ${{ matrix.target }}

            - name: Install linker for Linux aarch64 cross-compilation
              if: runner.os == 'Linux' && matrix.target == 'aarch64-unknown-linux-gnu'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gcc-aarch64-linux-gnu

            - name: Build binary
              run: cargo build --release --locked --bin ${{ env.BINARY_NAME }} --target ${{ matrix.target }}

            - name: Upload binary to release
              uses: taiki-e/upload-rust-binary-action@v1
              with:
                  bin: ${{ env.BINARY_NAME }}
                  target: ${{ matrix.target }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tar: unix
                  zip: windows
